[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kanvert"
version = "1.0.0"
description = "Professional Document Conversion MCP Server"
authors = [
    {name = "Kanvert Team", email = "team@kanvert.dev"}
]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Text Processing :: Markup",
]
keywords = ["mcp", "fastapi", "pdf", "markdown", "conversion", "document", "ai"]

dependencies = [
    # Core FastAPI and server dependencies
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # MCP (Model Context Protocol) dependencies
    "mcp>=1.1.2",
    
    # Document conversion dependencies
    "weasyprint>=61.2",
    "markdown>=3.5.1",
    "python-markdown-math>=0.8",
    "pymdown-extensions>=10.5",
    "beautifulsoup4>=4.12.2",
    "lxml>=4.9.3",
    
    # File handling and utilities
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.1",
    "Pillow>=10.1.0",
    
    # Logging and monitoring
    "structlog>=23.2.0",
    "rich>=13.7.0",
    
    # Environment and configuration
    "python-dotenv>=1.0.0",
    
    # Additional dependencies
    "python-json-logger>=2.0.7",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    # Testing dependencies
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "httpx>=0.25.2",
    "pytest-cov>=4.1.0",
    
    # Development dependencies
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.6.0",
]

test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "httpx>=0.25.2",
    "pytest-cov>=4.1.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/bannawandoor27/kanvert"
Repository = "https://github.com/bannawandoor27/kanvert.git"
Issues = "https://github.com/bannawandoor27/kanvert/issues"
Documentation = "https://github.com/bannawandoor27/kanvert#readme"

[project.scripts]
kanvert = "kanvert.main:main"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "httpx>=0.25.2",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.6.0",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "weasyprint.*",
    "markdown.*",
    "pymdownx.*",
    "bs4.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["kanvert/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=kanvert",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests",
    "core: marks tests as core functionality tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["kanvert"]
omit = [
    "kanvert/tests/*",
    "*/venv/*",
    "*/virtualenv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\\\bProtocol\\\\):",
    "@(abc\\.)?abstractmethod",
]
